{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Flashcards_Qualified_1/src/Layout/DeckView.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction DeckView() {\n  const {\n    deckId\n  } = useParams();\n  const [deck, SetDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    async function loadDeck() {\n      const getDeck = await readDeck(deckId);\n      const getCards = await listCards(deckId);\n      SetDeck(getDeck);\n      setCards(getCards);\n    }\n\n    loadDeck();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, deckId);\n}\n\nexport default DeckView;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Flashcards_Qualified_1/src/Layout/DeckView.js"],"names":["React","useParams","DeckView","deckId","deck","SetDeck","useState","cards","setCards","useEffect","loadDeck","getDeck","readDeck","getCards","listCards"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;AAEA,SAASC,QAAT,GAAoB;AAEpB,QAAM;AAACC,IAAAA;AAAD,MAAWF,SAAS,EAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;AACAG,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeC,QAAf,GAA0B;AACxB,YAAMC,OAAO,GAAG,MAAMC,QAAQ,CAACT,MAAD,CAA9B;AACA,YAAMU,QAAQ,GAAG,MAAMC,SAAS,CAACX,MAAD,CAAhC;AACAE,MAAAA,OAAO,CAACM,OAAD,CAAP;AACAH,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACD;;AACDH,IAAAA,QAAQ;AACT,GARM,EAQJ,EARI,CAAT;AAcC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,MAAL,CAAP;AACA;;AAGD,eAAeD,QAAf","sourcesContent":["import React from \"react\"\nimport {useParams} from \"react-router-dom\"\n\nfunction DeckView() {\n\nconst {deckId} = useParams()\nconst [deck, SetDeck] = useState({});\nconst [cards, setCards] = useState([]);\nuseEffect(() => {\n    async function loadDeck() {\n      const getDeck = await readDeck(deckId);\n      const getCards = await listCards(deckId);\n      SetDeck(getDeck);\n      setCards(getCards);\n    }\n    loadDeck();\n  }, []);\n\n\n\n\n\n return <h1>{deckId}</h1>\n}\n\n\nexport default DeckView"]},"metadata":{},"sourceType":"module"}