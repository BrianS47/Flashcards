{"ast":null,"code":"var _jsxFileName = \"/Users/briansimmons/Desktop/qualified-challenges/React/Project_Flashcards_Qualified_1/src/Layout/StudyView.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { readDeck, listCards } from \"../utils/api/index\";\n\nfunction StudyView() {\n  const {\n    deckId\n  } = useParams();\n  const [deck, SetDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    async function loadDeck() {\n      readDeck.then(response => {\n        SetDeck(response);\n      });\n    }\n\n    loadDeck();\n  }, []);\n\n  if (cards.length) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, deck.name);\n  }\n\n  return \"...Loading\";\n}\n\nexport default StudyView;","map":{"version":3,"sources":["/Users/briansimmons/Desktop/qualified-challenges/React/Project_Flashcards_Qualified_1/src/Layout/StudyView.js"],"names":["React","useEffect","useState","useParams","readDeck","listCards","StudyView","deckId","deck","SetDeck","cards","setCards","loadDeck","then","response","length","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,oBAAjC;;AAIA,SAASC,SAAT,GAAqB;AACrB,QAAM;AAACC,IAAAA;AAAD,MAAWJ,SAAS,EAA1B;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACf,mBAAeW,QAAf,GAA0B;AACzBR,MAAAA,QAAQ,CACPS,IADD,CACOC,QAAD,IAAc;AACnBL,QAAAA,OAAO,CAACK,QAAD,CAAP;AACA,OAHD;AAKA;;AACDF,IAAAA,QAAQ;AAGP,GAXQ,EAWP,EAXO,CAAT;;AAaA,MAAGF,KAAK,CAACK,MAAT,EAAgB;AAEZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAI,CAACQ,IAAV,CADJ;AAIH;;AAID,SACG,YADH;AAGC;;AAED,eAAeV,SAAf","sourcesContent":["import React, { useEffect,useState } from \"react\"\nimport {useParams} from \"react-router-dom\"\nimport {readDeck,listCards} from \"../utils/api/index\"\n\n\n\nfunction StudyView() {\nconst {deckId} = useParams()\nconst [deck,SetDeck] = useState({})\nconst [cards,setCards] = useState([])\nuseEffect(()=> {\nasync function loadDeck() {\n readDeck\n .then((response) => {\n  SetDeck(response)\n })\n \n}\nloadDeck()\n\n\n},[])\n\nif(cards.length){\n\n    return(\n        <h1>{deck.name}</h1>\n    )\n\n}\n\n\n\nreturn(\n   \"...Loading\"\n)\n}\n\nexport default StudyView"]},"metadata":{},"sourceType":"module"}